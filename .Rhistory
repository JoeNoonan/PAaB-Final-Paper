plot.title = element_text(size = rel(1), face = "bold", hjust = 0, margin = margin(0,0,5,0)),
plot.subtitle = element_text(size = rel(.75), face = "plain", hjust = 0, margin = margin(0,0,5,0)),
plot.caption = element_text(size = rel(0.5), face = "italic", hjust = 1, vjust = 1, margin = margin(12,0,0,0)),
panel.grid.major = element_line(size = .25),
panel.grid.minor = element_line(size = .25),
panel.grid = element_line(colour = "grey70"))+
guides(colour = guide_legend(nrow = 1, byrow =  TRUE))
m2_predict_plot
ggplot(m2_final_predict_df, aes(x = combined_child_rearing  , y = predf,
group=age,
color=age,
fill = age,
ymin = lower, ymax = upper)) +
geom_line()+
geom_ribbon(alpha =  .25, fill = age, colour=age)+
ylab("Predicted probability of \n being a commited democrat")+
xlab("Authoritarian Childrearing Values") +
theme_minimal()+
theme( text = element_text(size=12, family = "Meta"),
legend.title= element_blank(),
legend.position="bottom",
legend.key.width = unit(.5,  unit = "cm"),
legend.spacing.x = unit(.25, unit = "cm"),
legend.box.margin=margin(-12,-12,-12,-12),
axis.title.x=element_text(size = rel(.9)),
axis.text.x = element_text(angle = 0, hjust = 0),
axis.text.y = element_text(size = rel(.9)),
plot.title = element_text(size = rel(1), face = "bold", hjust = 0, margin = margin(0,0,5,0)),
plot.subtitle = element_text(size = rel(.75), face = "plain", hjust = 0, margin = margin(0,0,5,0)),
plot.caption = element_text(size = rel(0.5), face = "italic", hjust = 1, vjust = 1, margin = margin(12,0,0,0)),
panel.grid.major = element_line(size = .25),
panel.grid.minor = element_line(size = .25),
panel.grid = element_line(colour = "grey70"))+
guides(colour = guide_legend(nrow = 1, byrow =  TRUE))
ggplot(m2_final_predict_df, aes(x = combined_child_rearing  , y = predf,
group=age,
color=age,
fill = age,
ymin = lower, ymax = upper)) +
geom_line()+
geom_ribbon(alpha =  .25)+
ylab("Predicted probability of \n being a commited democrat")+
xlab("Authoritarian Childrearing Values") +
theme_minimal()+
theme( text = element_text(size=12, family = "Meta"),
legend.title= element_blank(),
legend.position="bottom",
legend.key.width = unit(.5,  unit = "cm"),
legend.spacing.x = unit(.25, unit = "cm"),
legend.box.margin=margin(-12,-12,-12,-12),
axis.title.x=element_text(size = rel(.9)),
axis.text.x = element_text(angle = 0, hjust = 0),
axis.text.y = element_text(size = rel(.9)),
plot.title = element_text(size = rel(1), face = "bold", hjust = 0, margin = margin(0,0,5,0)),
plot.subtitle = element_text(size = rel(.75), face = "plain", hjust = 0, margin = margin(0,0,5,0)),
plot.caption = element_text(size = rel(0.5), face = "italic", hjust = 1, vjust = 1, margin = margin(12,0,0,0)),
panel.grid.major = element_line(size = .25),
panel.grid.minor = element_line(size = .25),
panel.grid = element_line(colour = "grey70"))+
guides(colour = guide_legend(nrow = 1, byrow =  TRUE))
ggsave("output/graphs/m2_predict_new_old.png", plot = m2_predict_plot, width = 10.685, height = 8, units = "cm", scale = 1, dpi = 300)
m2_final_predict_df
View(m2_final_predict_df)
#### Run Model 2 for every country
#### Remove fixed effects
m2_function <- function(x){
df <- filter(evs_df_final, country_name_text %in% {{x}})
m2 <- glm(commit_dem_binary ~ combined_child_rearing + sex + age_grp + educ + polint_rev + gen_trust_rev, data = df, family = "binomial")
tidy_m2 <- broom::tidy(m2, exponentiate = TRUE,  conf.int= TRUE)
tidy_m2$country_name_text <- {{x}}
tidy_m2}
m2_country_list <- lapply(country_list, m2_function)
names(m2_country_list) <- country_list
europe_m2 <- bind_rows(m2_country_list, .id = "country_name_text")
country_list <- unique(evs_df_final$country_name_text)
m2_function <- function(x){
df <- filter(evs_df_final, country_name_text %in% {{x}})
m2 <- glm(commit_dem_binary ~ combined_child_rearing + sex + age_grp + educ + polint_rev + gen_trust_rev, data = df, family = "binomial")
tidy_m2 <- broom::tidy(m2, exponentiate = TRUE,  conf.int= TRUE)
tidy_m2$country_name_text <- {{x}}
tidy_m2}
m2_country_list <- lapply(country_list, m2_function)
names(m2_country_list) <- country_list
europe_m2 <- bind_rows(m2_country_list, .id = "country_name_text")
europe_m2
df <- filter(europe_m2, term == "combined_child_rearing") %>%
arrange(desc(estimate)) %>%
mutate(country_name_text  = fct_reorder(country_name_text, estimate)) %>%
mutate(recent_dem = ifelse(country_name_text %in% new_democracies, "New Democracy", "Old Democracy"))
df
View(df)
df <- filter(europe_m2, term == "combined_child_rearing") %>%
arrange(desc(estimate)) %>%
mutate(country_name_text  = fct_reorder(country_name_text, estimate)) %>%
mutate(recent_dem = ifelse(country_name_text %in% new_democracies, "New Democracy", "Old Democracy"))
europe_m2_plot_facet <- ggplot(df, aes(x = estimate, y = country_name_text)) +
geom_vline(aes(xintercept = 1), size = .25, linetype = "dashed", color = "red") +
geom_errorbarh(aes(xmax = conf.high, xmin = conf.low), size =.5, height = .5, color = "black") +
geom_point(size = 2, color = "orange")+
facet_wrap(~recent_dem, scales = "free_y")+
theme_minimal()+
theme( text = element_text(size=12, family = "Meta"),
legend.title= element_blank(),
legend.position="bottom",
legend.key.width = unit(.5,  unit = "cm"),
legend.spacing.x = unit(.25, unit = "cm"),
legend.box.margin=margin(-12,-12,-12,-12),
axis.title.x=element_text(size = rel(.9)),
axis.text.x = element_text(angle = 0, hjust = 0),
axis.text.y = element_text(size = rel(.9)),
plot.title = element_text(size = rel(1), face = "bold", hjust = 0, margin = margin(0,0,5,0)),
plot.subtitle = element_text(size = rel(.75), face = "plain", hjust = 0, margin = margin(0,0,5,0)),
plot.caption = element_text(size = rel(0.5), face = "italic", hjust = 1, vjust = 1, margin = margin(12,0,0,0)),
panel.grid.major = element_line(size = .25),
panel.grid.minor = element_line(size = .25),
panel.grid = element_line(colour = "grey70"))+
guides(colour = guide_legend(nrow = 1, byrow =  TRUE))
ggsave("output/graphs/europe_m2_plot_facet.png", plot = europe_m2_plot_facet, width = 12, height = 8, units = "cm", scale = 1, dpi = 300)
ggplot(df, aes(x = estimate, y = country_name_text)) +
geom_vline(aes(xintercept = 1), size = .25, linetype = "dashed", color = "red") +
geom_errorbarh(aes(xmax = conf.high, xmin = conf.low), size =.5, height = .5, color = "black") +
geom_point(size = 2, color = "orange")+
xlab("Odds Ratio")+
facet_wrap(~recent_dem, scales = "free_y")+
theme_minimal()+
theme(text = element_text(size=12, family = "Meta"),
legend.title= element_blank(),
legend.position="bottom",
legend.key.width = unit(.5,  unit = "cm"),
legend.spacing.x = unit(.25, unit = "cm"),
legend.box.margin=margin(-12,-12,-12,-12),
axis.tilte.y = element_blank(),
axis.title.x=element_text(size = rel(.9)),
axis.text.x = element_text(angle = 0, hjust = 0),
axis.text.y = element_text(size = rel(.9)),
plot.title = element_text(size = rel(1), face = "bold", hjust = 0, margin = margin(0,0,5,0)),
plot.subtitle = element_text(size = rel(.75), face = "plain", hjust = 0, margin = margin(0,0,5,0)),
plot.caption = element_text(size = rel(0.5), face = "italic", hjust = 1, vjust = 1, margin = margin(12,0,0,0)),
panel.grid.major = element_line(size = .25),
panel.grid.minor = element_line(size = .25),
panel.grid = element_line(colour = "grey70"))+
guides(colour = guide_legend(nrow = 1, byrow =  TRUE))
ggplot(df, aes(x = estimate, y = country_name_text)) +
geom_vline(aes(xintercept = 1), size = .25, linetype = "dashed", color = "red") +
geom_errorbarh(aes(xmax = conf.high, xmin = conf.low), size =.5, height = .5, color = "black") +
geom_point(size = 2, color = "orange")+
xlab("Odds Ratio")+
facet_wrap(~recent_dem, scales = "free_y")+
theme_minimal()+
theme(text = element_text(size=12, family = "Meta"),
legend.title= element_blank(),
legend.position="bottom",
legend.key.width = unit(.5,  unit = "cm"),
legend.spacing.x = unit(.25, unit = "cm"),
legend.box.margin=margin(-12,-12,-12,-12),
axis.title.y = element_blank(),
axis.title.x=element_text(size = rel(.9)),
axis.text.x = element_text(angle = 0, hjust = 0),
axis.text.y = element_text(size = rel(.9)),
plot.title = element_text(size = rel(1), face = "bold", hjust = 0, margin = margin(0,0,5,0)),
plot.subtitle = element_text(size = rel(.75), face = "plain", hjust = 0, margin = margin(0,0,5,0)),
plot.caption = element_text(size = rel(0.5), face = "italic", hjust = 1, vjust = 1, margin = margin(12,0,0,0)),
panel.grid.major = element_line(size = .25),
panel.grid.minor = element_line(size = .25),
panel.grid = element_line(colour = "grey70"))+
guides(colour = guide_legend(nrow = 1, byrow =  TRUE))
filter(europe_m2, term == "combined_child_rearing") %>%
arrange(desc(estimate)) %>%
mutate(country_name_text  = fct_reorder(country_name_text, estimate)) %>%
mutate(recent_dem = ifelse(country_name_text %in% new_democracies, "New Democracy", "Old Democracy"))
europe_m2_plot_facet <- ggplot(df, aes(x = estimate, y = country_name_text)) +
geom_vline(aes(xintercept = 1), size = 1, linetype = "dashed", color = "red") +
geom_errorbarh(aes(xmax = conf.high, xmin = conf.low), size =.75, height = .5, color = "black") +
geom_point(size = 2, color = "orange")+
xlab("Odds Ratio")+
facet_wrap(~recent_dem, scales = "free_y")+
scale_x_continuous(breaks = seq(-.5, 1.5, .25))+
theme_minimal()+
theme(text = element_text(size=12, family = "Meta"),
legend.title= element_blank(),
legend.position="bottom",
legend.key.width = unit(.5,  unit = "cm"),
legend.spacing.x = unit(.25, unit = "cm"),
legend.box.margin=margin(-12,-12,-12,-12),
axis.title.y = element_blank(),
axis.title.x=element_text(size = rel(.9)),
axis.text.x = element_text(angle = 0, hjust = 0),
axis.text.y = element_text(size = rel(.9)),
plot.title = element_text(size = rel(1), face = "bold", hjust = 0, margin = margin(0,0,5,0)),
plot.subtitle = element_text(size = rel(.75), face = "plain", hjust = 0, margin = margin(0,0,5,0)),
plot.caption = element_text(size = rel(0.5), face = "italic", hjust = 1, vjust = 1, margin = margin(12,0,0,0)),
panel.grid.major = element_line(size = .25),
panel.grid.minor = element_line(size = .25),
panel.grid = element_line(colour = "grey70"))+
guides(colour = guide_legend(nrow = 1, byrow =  TRUE))
filter(europe_m2, term == "combined_child_rearing") %>%
arrange(desc(estimate)) %>%
mutate(country_name_text  = fct_reorder(country_name_text, estimate)) %>%
mutate(recent_dem = ifelse(country_name_text %in% new_democracies, "New Democracy", "Old Democracy"))
europe_m2_plot_facet <- ggplot(df, aes(x = estimate, y = country_name_text)) +
geom_vline(aes(xintercept = 1), size = 1, linetype = "dashed", color = "red") +
geom_errorbarh(aes(xmax = conf.high, xmin = conf.low), size =.75, height = .5, color = "black") +
geom_point(size = 2, color = "orange")+
xlab("Odds Ratio")+
facet_wrap(~recent_dem, scales = "free_y")+
scale_x_continuous(breaks = seq(-.5, 1.5, .25))+
theme_minimal()+
theme(text = element_text(size=12, family = "Meta"),
legend.title= element_blank(),
legend.position="bottom",
legend.key.width = unit(.5,  unit = "cm"),
legend.spacing.x = unit(.25, unit = "cm"),
legend.box.margin=margin(-12,-12,-12,-12),
axis.title.y = element_blank(),
axis.title.x=element_text(size = rel(.9)),
axis.text.x = element_text(angle = 0, hjust = 0),
axis.text.y = element_text(size = rel(.9)),
plot.title = element_text(size = rel(1), face = "bold", hjust = 0, margin = margin(0,0,5,0)),
plot.subtitle = element_text(size = rel(.75), face = "plain", hjust = 0, margin = margin(0,0,5,0)),
plot.caption = element_text(size = rel(0.5), face = "italic", hjust = 1, vjust = 1, margin = margin(12,0,0,0)),
panel.grid.major = element_line(size = .25),
panel.grid.minor = element_line(size = .25),
panel.grid = element_line(colour = "grey70"))+
guides(colour = guide_legend(nrow = 1, byrow =  TRUE))
ggplot(df, aes(x = estimate, y = country_name_text)) +
geom_vline(aes(xintercept = 1), size = 1, linetype = "dashed", color = "red") +
geom_errorbarh(aes(xmax = conf.high, xmin = conf.low), size =.75, height = .5, color = "black") +
geom_point(size = 2, color = "orange")+
xlab("Odds Ratio")+
facet_wrap(~recent_dem, scales = "free_y")+
scale_x_continuous(breaks = seq(-.5, 1.5, .25))+
theme_minimal()+
theme(text = element_text(size=12, family = "Meta"),
legend.title= element_blank(),
legend.position="bottom",
legend.key.width = unit(.5,  unit = "cm"),
legend.spacing.x = unit(.25, unit = "cm"),
legend.box.margin=margin(-12,-12,-12,-12),
axis.title.y = element_blank(),
axis.title.x=element_text(size = rel(.9)),
axis.text.x = element_text(angle = 90, hjust = 0),
axis.text.y = element_text(size = rel(.9)),
plot.title = element_text(size = rel(1), face = "bold", hjust = 0, margin = margin(0,0,5,0)),
plot.subtitle = element_text(size = rel(.75), face = "plain", hjust = 0, margin = margin(0,0,5,0)),
plot.caption = element_text(size = rel(0.5), face = "italic", hjust = 1, vjust = 1, margin = margin(12,0,0,0)),
panel.grid.major = element_line(size = .25),
panel.grid.minor = element_line(size = .25),
panel.grid = element_line(colour = "grey70"))+
guides(colour = guide_legend(nrow = 1, byrow =  TRUE))
europe_m2_plot_facet <- ggplot(df, aes(x = estimate, y = country_name_text)) +
geom_vline(aes(xintercept = 1), size = 1, linetype = "dashed", color = "red") +
geom_errorbarh(aes(xmax = conf.high, xmin = conf.low), size =.75, height = .5, color = "black") +
geom_point(size = 2, color = "orange")+
xlab("Odds Ratio")+
facet_wrap(~recent_dem, scales = "free_y")+
scale_x_continuous(breaks = seq(-.5, 1.5, .25))+
theme_minimal()+
theme(text = element_text(size=12, family = "Meta"),
legend.title= element_blank(),
legend.position="bottom",
legend.key.width = unit(.5,  unit = "cm"),
legend.spacing.x = unit(.25, unit = "cm"),
legend.box.margin=margin(-12,-12,-12,-12),
axis.title.y = element_blank(),
axis.title.x=element_text(size = rel(.9)),
axis.text.x = element_text(angle = 90, hjust = 0),
axis.text.y = element_text(size = rel(.9)),
plot.title = element_text(size = rel(1), face = "bold", hjust = 0, margin = margin(0,0,5,0)),
plot.subtitle = element_text(size = rel(.75), face = "plain", hjust = 0, margin = margin(0,0,5,0)),
plot.caption = element_text(size = rel(0.5), face = "italic", hjust = 1, vjust = 1, margin = margin(12,0,0,0)),
panel.grid.major = element_line(size = .25),
panel.grid.minor = element_line(size = .25),
panel.grid = element_line(colour = "grey70"))+
guides(colour = guide_legend(nrow = 1, byrow =  TRUE))
ggsave("output/graphs/europe_m2_plot_facet.png", plot = europe_m2_plot_facet, width = 12, height = 8, units = "cm", scale = 1, dpi = 300)
ggplot(df, aes(x = estimate, y = country_name_text)) +
geom_vline(aes(xintercept = 1), size = 1, linetype = "dashed", color = "red") +
geom_errorbarh(aes(xmax = conf.high, xmin = conf.low), size =.75, height = .5, color = "black") +
geom_point(size = 2, color = "orange")+
xlab("Odds Ratio")+
facet_wrap(~recent_dem, scales = "free_y")+
scale_x_continuous(breaks = seq(-.5, 1.5, .25))+
theme_minimal()+
theme(text = element_text(size=12, family = "Meta"),
legend.title= element_blank(),
legend.position="bottom",
legend.key.width = unit(.5,  unit = "cm"),
legend.spacing.x = unit(.25, unit = "cm"),
legend.box.margin=margin(-12,-12,-12,-12),
axis.title.y = element_blank(),
axis.title.x=element_text(size = rel(.9)),
axis.text.x = element_text(size = rel(.9), hjust = -.5),
axis.text.y = element_text(size = rel(.9)),
plot.title = element_text(size = rel(1), face = "bold", hjust = 0, margin = margin(0,0,5,0)),
plot.subtitle = element_text(size = rel(.75), face = "plain", hjust = 0, margin = margin(0,0,5,0)),
plot.caption = element_text(size = rel(0.5), face = "italic", hjust = 1, vjust = 1, margin = margin(12,0,0,0)),
panel.grid.major = element_line(size = .25),
panel.grid.minor = element_line(size = .25),
panel.grid = element_line(colour = "grey70"))+
guides(colour = guide_legend(nrow = 1, byrow =  TRUE))
ggplot(df, aes(x = estimate, y = country_name_text)) +
geom_vline(aes(xintercept = 1), size = 1, linetype = "dashed", color = "red") +
geom_errorbarh(aes(xmax = conf.high, xmin = conf.low), size =.75, height = .5, color = "black") +
geom_point(size = 2, color = "orange")+
xlab("Odds Ratio")+
facet_wrap(~recent_dem, scales = "free_y")+
scale_x_continuous(breaks = seq(-.5, 1.5, .25))+
theme_minimal()+
theme(text = element_text(size=12, family = "Meta"),
legend.title= element_blank(),
legend.position="bottom",
legend.key.width = unit(.5,  unit = "cm"),
legend.spacing.x = unit(.25, unit = "cm"),
legend.box.margin=margin(-12,-12,-12,-12),
axis.title.y = element_blank(),
axis.title.x=element_text(size = rel(.9)),
axis.text.x = element_text(size = rel(.9), hjust = .25),
axis.text.y = element_text(size = rel(.9)),
plot.title = element_text(size = rel(1), face = "bold", hjust = 0, margin = margin(0,0,5,0)),
plot.subtitle = element_text(size = rel(.75), face = "plain", hjust = 0, margin = margin(0,0,5,0)),
plot.caption = element_text(size = rel(0.5), face = "italic", hjust = 1, vjust = 1, margin = margin(12,0,0,0)),
panel.grid.major = element_line(size = .25),
panel.grid.minor = element_line(size = .25),
panel.grid = element_line(colour = "grey70"))+
guides(colour = guide_legend(nrow = 1, byrow =  TRUE))
ggplot(df, aes(x = estimate, y = country_name_text)) +
geom_vline(aes(xintercept = 1), size = 1, linetype = "dashed", color = "red") +
geom_errorbarh(aes(xmax = conf.high, xmin = conf.low), size =.75, height = .5, color = "black") +
geom_point(size = 2, color = "orange")+
xlab("Odds Ratio")+
facet_wrap(~recent_dem, scales = "free_y")+
scale_x_continuous(breaks = seq(-.5, 1.5, .25))+
theme_minimal()+
theme(text = element_text(size=12, family = "Meta"),
legend.title= element_blank(),
legend.position="bottom",
legend.key.width = unit(.5,  unit = "cm"),
legend.spacing.x = unit(.25, unit = "cm"),
legend.box.margin=margin(-12,-12,-12,-12),
axis.title.y = element_blank(),
axis.title.x=element_text(size = rel(.9)),
axis.text.x = element_text(size = rel(.9), hjust = 1),
axis.text.y = element_text(size = rel(.9)),
plot.title = element_text(size = rel(1), face = "bold", hjust = 0, margin = margin(0,0,5,0)),
plot.subtitle = element_text(size = rel(.75), face = "plain", hjust = 0, margin = margin(0,0,5,0)),
plot.caption = element_text(size = rel(0.5), face = "italic", hjust = 1, vjust = 1, margin = margin(12,0,0,0)),
panel.grid.major = element_line(size = .25),
panel.grid.minor = element_line(size = .25),
panel.grid = element_line(colour = "grey70"))+
guides(colour = guide_legend(nrow = 1, byrow =  TRUE))
ggplot(df, aes(x = estimate, y = country_name_text)) +
geom_vline(aes(xintercept = 1), size = 1, linetype = "dashed", color = "red") +
geom_errorbarh(aes(xmax = conf.high, xmin = conf.low), size =.75, height = .5, color = "black") +
geom_point(size = 2, color = "orange")+
xlab("Odds Ratio")+
facet_wrap(~recent_dem, scales = "free_y")+
scale_x_continuous(breaks = seq(-.5, 1.5, .25))+
theme_minimal()+
theme(text = element_text(size=12, family = "Meta"),
legend.title= element_blank(),
legend.position="bottom",
legend.key.width = unit(.5,  unit = "cm"),
legend.spacing.x = unit(.25, unit = "cm"),
legend.box.margin=margin(-12,-12,-12,-12),
axis.title.y = element_blank(),
axis.title.x=element_text(size = rel(.9)),
axis.text.x = element_text(size = rel(.9), hjust = .75),
axis.text.y = element_text(size = rel(.9)),
plot.title = element_text(size = rel(1), face = "bold", hjust = 0, margin = margin(0,0,5,0)),
plot.subtitle = element_text(size = rel(.75), face = "plain", hjust = 0, margin = margin(0,0,5,0)),
plot.caption = element_text(size = rel(0.5), face = "italic", hjust = 1, vjust = 1, margin = margin(12,0,0,0)),
panel.grid.major = element_line(size = .25),
panel.grid.minor = element_line(size = .25),
panel.grid = element_line(colour = "grey70"))+
guides(colour = guide_legend(nrow = 1, byrow =  TRUE))
europe_m2_plot_facet <- ggplot(df, aes(x = estimate, y = country_name_text)) +
geom_vline(aes(xintercept = 1), size = 1, linetype = "dashed", color = "red") +
geom_errorbarh(aes(xmax = conf.high, xmin = conf.low), size =.75, height = .5, color = "black") +
geom_point(size = 2, color = "orange")+
xlab("Odds Ratio")+
facet_wrap(~recent_dem, scales = "free_y")+
scale_x_continuous(breaks = seq(-.5, 1.5, .25))+
theme_minimal()+
theme(text = element_text(size=12, family = "Meta"),
legend.title= element_blank(),
legend.position="bottom",
legend.key.width = unit(.5,  unit = "cm"),
legend.spacing.x = unit(.25, unit = "cm"),
legend.box.margin=margin(-12,-12,-12,-12),
axis.title.y = element_blank(),
axis.title.x=element_text(size = rel(.9)),
axis.text.x = element_text(size = rel(.9), hjust = .75),
axis.text.y = element_text(size = rel(.9)),
plot.title = element_text(size = rel(1), face = "bold", hjust = 0, margin = margin(0,0,5,0)),
plot.subtitle = element_text(size = rel(.75), face = "plain", hjust = 0, margin = margin(0,0,5,0)),
plot.caption = element_text(size = rel(0.5), face = "italic", hjust = 1, vjust = 1, margin = margin(12,0,0,0)),
panel.grid.major = element_line(size = .25),
panel.grid.minor = element_line(size = .25),
panel.grid = element_line(colour = "grey70"))+
guides(colour = guide_legend(nrow = 1, byrow =  TRUE))
ggsave("output/graphs/europe_m2_plot_facet.png", plot = europe_m2_plot_facet, width = 12, height = 8, units = "cm", scale = 1, dpi = 300)
europe_m2_plot_facet <- ggplot(df, aes(x = estimate, y = country_name_text)) +
geom_vline(aes(xintercept = 1), size = .75, linetype = "dashed", color = "red") +
geom_errorbarh(aes(xmax = conf.high, xmin = conf.low), size =.5, height = .5, color = "black") +
geom_point(size = 2, color = "orange")+
xlab("Odds Ratio")+
facet_wrap(~recent_dem, scales = "free_y")+
scale_x_continuous(breaks = seq(-.5, 1.5, .25))+
theme_minimal()+
theme(text = element_text(size=12, family = "Meta"),
legend.title= element_blank(),
legend.position="bottom",
legend.key.width = unit(.5,  unit = "cm"),
legend.spacing.x = unit(.25, unit = "cm"),
legend.box.margin=margin(-12,-12,-12,-12),
axis.title.y = element_blank(),
axis.title.x=element_text(size = rel(.9)),
axis.text.x = element_text(size = rel(.9), hjust = .75),
axis.text.y = element_text(size = rel(.9)),
plot.title = element_text(size = rel(1), face = "bold", hjust = 0, margin = margin(0,0,5,0)),
plot.subtitle = element_text(size = rel(.75), face = "plain", hjust = 0, margin = margin(0,0,5,0)),
plot.caption = element_text(size = rel(0.5), face = "italic", hjust = 1, vjust = 1, margin = margin(12,0,0,0)),
panel.grid.major = element_line(size = .25),
panel.grid.minor = element_line(size = .25),
panel.grid = element_line(colour = "grey70"))+
guides(colour = guide_legend(nrow = 1, byrow =  TRUE))
ggsave("output/graphs/europe_m2_plot_facet.png", plot = europe_m2_plot_facet, width = 12, height = 8, units = "cm", scale = 1, dpi = 300)
ggplot(df, aes(x = estimate, y = country_name_text)) +
geom_vline(aes(xintercept = 1), size = .75, linetype = "dashed", color = "red") +
geom_errorbarh(aes(xmax = conf.high, xmin = conf.low), size =.5, height = .5, color = "black") +
geom_point(size = 2, color = "#d06398")+
xlab("Odds Ratio")+
facet_wrap(~recent_dem, scales = "free_y")+
scale_x_continuous(breaks = seq(-.5, 1.5, .25))+
theme_minimal()+
theme(text = element_text(size=12, family = "Meta"),
legend.title= element_blank(),
legend.position="bottom",
legend.key.width = unit(.5,  unit = "cm"),
legend.spacing.x = unit(.25, unit = "cm"),
legend.box.margin=margin(-12,-12,-12,-12),
axis.title.y = element_blank(),
axis.title.x=element_text(size = rel(.9)),
axis.text.x = element_text(size = rel(.9), hjust = .75),
axis.text.y = element_text(size = rel(.9)),
plot.title = element_text(size = rel(1), face = "bold", hjust = 0, margin = margin(0,0,5,0)),
plot.subtitle = element_text(size = rel(.75), face = "plain", hjust = 0, margin = margin(0,0,5,0)),
plot.caption = element_text(size = rel(0.5), face = "italic", hjust = 1, vjust = 1, margin = margin(12,0,0,0)),
panel.grid.major = element_line(size = .25),
panel.grid.minor = element_line(size = .25),
panel.grid = element_line(colour = "grey70"))+
guides(colour = guide_legend(nrow = 1, byrow =  TRUE))
europe_m2_plot_facet <- ggplot(df, aes(x = estimate, y = country_name_text)) +
geom_vline(aes(xintercept = 1), size = .75, linetype = "dashed", color = "red") +
geom_errorbarh(aes(xmax = conf.high, xmin = conf.low), size =.5, height = .5, color = "black") +
geom_point(size = 2, color = "#d06398")+
xlab("Odds Ratio")+
facet_wrap(~recent_dem, scales = "free_y")+
scale_x_continuous(breaks = seq(-.5, 1.5, .25))+
theme_minimal()+
theme(text = element_text(size=12, family = "Meta"),
legend.title= element_blank(),
legend.position="bottom",
legend.key.width = unit(.5,  unit = "cm"),
legend.spacing.x = unit(.25, unit = "cm"),
legend.box.margin=margin(-12,-12,-12,-12),
axis.title.y = element_blank(),
axis.title.x=element_text(size = rel(.9)),
axis.text.x = element_text(size = rel(.9), hjust = .75),
axis.text.y = element_text(size = rel(.9)),
plot.title = element_text(size = rel(1), face = "bold", hjust = 0, margin = margin(0,0,5,0)),
plot.subtitle = element_text(size = rel(.75), face = "plain", hjust = 0, margin = margin(0,0,5,0)),
plot.caption = element_text(size = rel(0.5), face = "italic", hjust = 1, vjust = 1, margin = margin(12,0,0,0)),
panel.grid.major = element_line(size = .25),
panel.grid.minor = element_line(size = .25),
panel.grid = element_line(colour = "grey70"))+
guides(colour = guide_legend(nrow = 1, byrow =  TRUE))
ggsave("output/graphs/europe_m2_plot_facet.png", plot = europe_m2_plot_facet, width = 12, height = 8, units = "cm", scale = 1, dpi = 300)
df
View(df)
?between
df %>%
mutate(not_significant = ifelse(between(1, conf.low, conf.high), 1, 0))
df %>% between(1, conf.low, conf.high)
df %>%
mutate(not_significant = ifelse(between(1, conf.low, conf.high), 1, 0))
df %>%
mutate(not_significant == ifelse(between(1, conf.low, conf.high), 1, 0))
df %>%
mutate(not_significant = ifelse(between(1, conf.low, conf.high) = TRUE, 1, 0))
df %>% between(1, conf.low, conf.high)
df %>%
mutate(not_significant = ifelse(conf.low < 1 & conf.high > 1, 1, 0))
View(df %>%
mutate(not_significant = ifelse(conf.low < 1 & conf.high > 1, 1, 0)))
df %>%
mutate(not_significant = ifelse(conf.low < 1 & conf.high > 1, 1, 0)) %>%
group_by(age) %>%
count(not_significant)
df %>%
mutate(not_significant = ifelse(conf.low < 1 & conf.high > 1, 1, 0)) %>%
group_by(recent_dem) %>%
count(not_significan
df %>%
mutate(not_significant = ifelse(conf.low < 1 & conf.high > 1, 1, 0)) %>%
group_by(recent_dem) %>%
count(not_significant)
df %>%
mutate(not_significant = ifelse(conf.low < 1 & conf.high > 1, 1, 0)) %>%
group_by(recent_dem) %>%
count(not_significant)
8+5
