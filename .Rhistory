ungroup() %>%
mutate(conf_lower = as.numeric(moe(unweighted_Percent, unweighted_total)$conf.lower)/100,
conf_upper = as.numeric(moe(unweighted_Percent, unweighted_total)$conf.upper)/100)
combined_summary_df_unweighted
sum(combined_summary_df_unweighted$unweighted_n, na.rm = TRUE)
m2_predict_df_old
#### General Model 2 prediction plots
#### https://druedin.com/2016/01/16/predicted-probabilities-in-r/
m2_no_fe_old <- glm(commit_dem_binary ~ combined_child_rearing + sex + age_grp + educ + polint_rev + gen_trust_rev, data = evs_df_final_old, family = "binomial")
m2_no_fe_new <- glm(commit_dem_binary ~ combined_child_rearing + sex + age_grp + educ + polint_rev + gen_trust_rev, data = evs_df_final_new, family = "binomial")
m2_predict_df_old <- with(evs_df_final_old, data.frame(combined_child_rearing = -3:2,
sex=mean(sex, na.rm=TRUE),
age_grp=mean(age_grp, na.rm=TRUE),
educ = mean(educ, na.rm = TRUE),
polint_rev = mean(polint_rev, na.rm = TRUE),
gen_trust_rev = mean(gen_trust_rev, na.rm = TRUE)))
preds_old <- predict(m2_no_fe_old, m2_predict_df_old, type="response", se.fit=TRUE)
m2_predict_df_old$predf <- preds_old$fit # predicted
m2_predict_df_old$lower <- preds_old$fit - (1.96*preds_old$se.fit) # lower bounds
m2_predict_df_old$upper <- preds_old$fit + (1.96*preds_old$se.fit) # upper
m2_predict_df_old$age <- "Old Democracies"
### Model 2. Controls
### Used in the final paper
### gender, age, education, political interest, generalized trust.
m2 <- glm(commit_dem_binary ~ combined_child_rearing + sex + age_grp + educ + polint_rev + gen_trust_rev +country_name_text, data = evs_df_final, family = "binomial")
m2_old <- glm(commit_dem_binary ~ combined_child_rearing + sex + age_grp + educ + polint_rev + gen_trust_rev + country_name_text, data = evs_df_final_old, family = "binomial")
m2_new <- glm(commit_dem_binary ~ combined_child_rearing + sex + age_grp + educ + polint_rev + gen_trust_rev + country_name_text, data = evs_df_final_new, family = "binomial")
### Checks
anova(m2, test = "Chi")
anova(m2_old, test = "Chi")
anova(m2_new, test = "Chi")
### Plot outliers
plot(m2, which = 4, id.n = 3)
# Extract model results
model.data <- broom::augment(m2) %>%
mutate(index = 1:n())
model.data %>% top_n(3, .cooksd)
ggplot(model.data, aes(index, .std.resid)) +
geom_point(aes(color = commit_dem_binary ), alpha = .5) +
theme_bw()
### Filter influential cases
model.data %>%
filter(abs(.std.resid) > 3)
### Multicoloniarity
car::vif(m2)
#### Save as tidy dataset
tidy_m2 <- broom::tidy(m2)
tidy_m2_old <- broom::tidy(m2_old)
tidy_m2_new <- broom::tidy(m2_new)
#### General Model 2 prediction plots
#### https://druedin.com/2016/01/16/predicted-probabilities-in-r/
m2_no_fe_old <- glm(commit_dem_binary ~ combined_child_rearing + sex + age_grp + educ + polint_rev + gen_trust_rev, data = evs_df_final_old, family = "binomial")
m2_no_fe_new <- glm(commit_dem_binary ~ combined_child_rearing + sex + age_grp + educ + polint_rev + gen_trust_rev, data = evs_df_final_new, family = "binomial")
### Logit Regression
evs_df_final_old <-  filter(evs_df_final, recent_dem == 0)
evs_df_final_new <-  filter(evs_df_final, recent_dem == 1)
### Create new prediction Set
m2_predict_df_new <- with(evs_df_final_new, data.frame(combined_child_rearing = -3:2,
sex=mean(sex, na.rm=TRUE),
age_grp=mean(age_grp, na.rm=TRUE),
educ = mean(educ, na.rm = TRUE),
polint_rev = mean(polint_rev, na.rm = TRUE),
gen_trust_rev = mean(gen_trust_rev, na.rm = TRUE)))
preds_new<- predict(m2_no_fe_new, m2_predict_df_new, type="response", se.fit=TRUE)
m2_predict_df_new$predf <- preds_new$fit # predicted
m2_predict_df_new$lower <- preds_new$fit - (1.96*preds_new$se.fit) # lower bounds
m2_predict_df_new$upper <- preds_new$fit + (1.96*preds_new$se.fit) # upper
m2_predict_df_new$age <- "New Democracies"
m2_no_fe_old <- glm(commit_dem_binary ~ combined_child_rearing + sex + age_grp + educ + polint_rev + gen_trust_rev, data = evs_df_final_old, family = "binomial")
m2_no_fe_new <- glm(commit_dem_binary ~ combined_child_rearing + sex + age_grp + educ + polint_rev + gen_trust_rev, data = evs_df_final_new, family = "binomial")
m2_predict_df_old <- with(evs_df_final_old, data.frame(combined_child_rearing = -3:2,
sex=mean(sex, na.rm=TRUE),
age_grp=mean(age_grp, na.rm=TRUE),
educ = mean(educ, na.rm = TRUE),
polint_rev = mean(polint_rev, na.rm = TRUE),
gen_trust_rev = mean(gen_trust_rev, na.rm = TRUE)))
preds_old <- predict(m2_no_fe_old, m2_predict_df_old, type="response", se.fit=TRUE)
m2_predict_df_old$predf <- preds_old$fit # predicted
m2_predict_df_old$lower <- preds_old$fit - (1.96*preds_old$se.fit) # lower bounds
m2_predict_df_old$upper <- preds_old$fit + (1.96*preds_old$se.fit) # upper
m2_predict_df_old$age <- "Old Democracies"
### Create new prediction Set
m2_predict_df_new <- with(evs_df_final_new, data.frame(combined_child_rearing = -3:2,
sex=mean(sex, na.rm=TRUE),
age_grp=mean(age_grp, na.rm=TRUE),
educ = mean(educ, na.rm = TRUE),
polint_rev = mean(polint_rev, na.rm = TRUE),
gen_trust_rev = mean(gen_trust_rev, na.rm = TRUE)))
preds_new<- predict(m2_no_fe_new, m2_predict_df_new, type="response", se.fit=TRUE)
m2_predict_df_new$predf <- preds_new$fit # predicted
m2_predict_df_new$lower <- preds_new$fit - (1.96*preds_new$se.fit) # lower bounds
m2_predict_df_new$upper <- preds_new$fit + (1.96*preds_new$se.fit) # upper
m2_predict_df_new$age <- "New Democracies"
m2_predict_df_old
m2_predict_df_old <- with(evs_df_final_old, data.frame(combined_child_rearing = -3:2,
sex=median(sex, na.rm=TRUE),
age_grp=mean(age_grp, na.rm=TRUE),
educ = median(educ, na.rm = TRUE),
polint_rev = median(polint_rev, na.rm = TRUE),
gen_trust_rev = median(gen_trust_rev, na.rm = TRUE)))
m2_predict_df_old
preds_old <- predict(m2_no_fe_old, m2_predict_df_old, type="response", se.fit=TRUE)
m2_predict_df_old$predf <- preds_old$fit # predicted
m2_predict_df_old$lower <- preds_old$fit - (1.96*preds_old$se.fit) # lower bounds
m2_predict_df_old$upper <- preds_old$fit + (1.96*preds_old$se.fit) # upper
m2_predict_df_old$age <- "Old Democracies"
preds_old
m2_predict_df_old
m2_predict_df_old <- with(evs_df_final_old, data.frame(combined_child_rearing = -3:2,
sex=mean(sex, na.rm=TRUE),
age_grp=mean(age_grp, na.rm=TRUE),
educ = mean(educ, na.rm = TRUE),
polint_rev = mean(polint_rev, na.rm = TRUE),
gen_trust_rev = mean(gen_trust_rev, na.rm = TRUE)))
### Create new prediction Set
m2_predict_df_new <- with(evs_df_final_new, data.frame(combined_child_rearing = -3:2,
sex=mean(sex, na.rm=TRUE),
age_grp=mean(age_grp, na.rm=TRUE),
educ = mean(educ, na.rm = TRUE),
polint_rev = mean(polint_rev, na.rm = TRUE),
gen_trust_rev = mean(gen_trust_rev, na.rm = TRUE)))
preds_new<- predict(m2_no_fe_new, m2_predict_df_new, type="response", se.fit=TRUE)
m2_predict_df_new$predf <- preds_new$fit # predicted
m2_predict_df_new$lower <- preds_new$fit - (1.96*preds_new$se.fit) # lower bounds
m2_predict_df_new$upper <- preds_new$fit + (1.96*preds_new$se.fit) # upper
m2_predict_df_new$age <- "New Democracies"
m2_final_predict_df <- rbind(m2_predict_df_new, m2_predict_df_old) %>%
mutate(age = factor(age, levels = c("Old Democracies", "New Democracies")))
m2_predict_df_new <- with(evs_df_final_new, data.frame(combined_child_rearing = -3:2,
sex=mean(sex, na.rm=TRUE),
age_grp=mean(age_grp, na.rm=TRUE),
educ = mean(educ, na.rm = TRUE),
polint_rev = mean(polint_rev, na.rm = TRUE),
gen_trust_rev = mean(gen_trust_rev, na.rm = TRUE)))
preds_new<- predict(m2_no_fe_new, m2_predict_df_new, type="response", se.fit=TRUE)
preds_new<- predict(m2_no_fe_new, m2_predict_df_new, type="response", se.fit=TRUE)
m2_predict_df_new$predf <- preds_new$fit # predicted
m2_predict_df_new$lower <- preds_new$fit - (1.96*preds_new$se.fit) # lower bounds
m2_predict_df_new$upper <- preds_new$fit + (1.96*preds_new$se.fit) # upper
m2_predict_df_new$age <- "New Democracies"
m2_final_predict_df <- rbind(m2_predict_df_new, m2_predict_df_old) %>%
mutate(age = factor(age, levels = c("Old Democracies", "New Democracies")))
m2_predict_df_new
m2_predict_df_old
m2_predict_df_old <- with(evs_df_final_old, data.frame(combined_child_rearing = -3:2,
sex=mean(sex, na.rm=TRUE),
age_grp=mean(age_grp, na.rm=TRUE),
educ = mean(educ, na.rm = TRUE),
polint_rev = mean(polint_rev, na.rm = TRUE),
gen_trust_rev = mean(gen_trust_rev, na.rm = TRUE)))
preds_old <- predict(m2_no_fe_old, m2_predict_df_old, type="response", se.fit=TRUE)
m2_predict_df_old$predf <- preds_old$fit # predicted
m2_predict_df_old$lower <- preds_old$fit - (1.96*preds_old$se.fit) # lower bounds
m2_predict_df_old$upper <- preds_old$fit + (1.96*preds_old$se.fit) # upper
m2_predict_df_old$age <- "Old Democracies"
m2_predict_df_old
### Create new prediction Set
m2_predict_df_new <- with(evs_df_final_new, data.frame(combined_child_rearing = -3:2,
sex=mean(sex, na.rm=TRUE),
age_grp=mean(age_grp, na.rm=TRUE),
educ = mean(educ, na.rm = TRUE),
polint_rev = mean(polint_rev, na.rm = TRUE),
gen_trust_rev = mean(gen_trust_rev, na.rm = TRUE)))
preds_new<- predict(m2_no_fe_new, m2_predict_df_new, type="response", se.fit=TRUE)
m2_predict_df_new$predf <- preds_new$fit # predicted
m2_predict_df_new$lower <- preds_new$fit - (1.96*preds_new$se.fit) # lower bounds
m2_predict_df_new$upper <- preds_new$fit + (1.96*preds_new$se.fit) # upper
m2_predict_df_new$age <- "New Democracies"
m2_predict_df_new
0.1869658-0.1241773
18-12
(1.27*1)*100
(1.27-1)*100
m2_leader_no_fe <- glm(system_leader_binary ~ combined_child_rearing + sex + age_grp + educ + polint_rev + gen_trust_rev, data = evs_df_final, family = "binomial")
m2_experts_no_fe <- glm(system_experts_binary ~ combined_child_rearing + sex + age_grp + educ + polint_rev + gen_trust_rev, data = evs_df_final, family = "binomial")
m2_army_no_fe<- glm(system_army_binary ~ combined_child_rearing + sex + age_grp + educ + polint_rev + gen_trust_rev, data = evs_df_final, family = "binomial")
m2_leader_predict <- with(m2_leader_no_fe, data.frame(combined_child_rearing = -3:2,
sex=mean(sex, na.rm=TRUE),
age_grp=mean(age_grp, na.rm=TRUE),
educ = mean(educ, na.rm = TRUE),
polint_rev = mean(polint_rev, na.rm = TRUE),
gen_trust_rev = mean(gen_trust_rev, na.rm = TRUE)))
m2_leader_no_fe <- glm(system_leader_binary ~ combined_child_rearing + sex + age_grp + educ + polint_rev + gen_trust_rev, data = evs_df_final, family = "binomial")
m2_experts_no_fe <- glm(system_experts_binary ~ combined_child_rearing + sex + age_grp + educ + polint_rev + gen_trust_rev, data = evs_df_final, family = "binomial")
m2_army_no_fe<- glm(system_army_binary ~ combined_child_rearing + sex + age_grp + educ + polint_rev + gen_trust_rev, data = evs_df_final, family = "binomial")
m2_leader_predict <- with(m2_leader_no_fe, data.frame(combined_child_rearing = -3:2,
sex=mean(sex, na.rm=TRUE),
age_grp=mean(age_grp, na.rm=TRUE),
educ = mean(educ, na.rm = TRUE),
polint_rev = mean(polint_rev, na.rm = TRUE),
gen_trust_rev = mean(gen_trust_rev, na.rm = TRUE)))
m2_leader_no_fe <- glm(system_leader_binary ~ combined_child_rearing + sex + age_grp + educ + polint_rev + gen_trust_rev, data = evs_df_final, family = "binomial")
m2_experts_no_fe <- glm(system_experts_binary ~ combined_child_rearing + sex + age_grp + educ + polint_rev + gen_trust_rev, data = evs_df_final, family = "binomial")
m2_army_no_fe<- glm(system_army_binary ~ combined_child_rearing + sex + age_grp + educ + polint_rev + gen_trust_rev, data = evs_df_final, family = "binomial")
m2_leader_predict <- with(evs_df_final, data.frame(combined_child_rearing = -3:2,
sex=mean(sex, na.rm=TRUE),
age_grp=mean(age_grp, na.rm=TRUE),
educ = mean(educ, na.rm = TRUE),
polint_rev = mean(polint_rev, na.rm = TRUE),
gen_trust_rev = mean(gen_trust_rev, na.rm = TRUE)))
m2_leader_predict
preds_leader <- predict(m2_leader_no_fe, m2_leader_predict, type="response", se.fit=TRUE)
preds_leader
preds_leader <- predict(m2_leader_no_fe, m2_leader_predict, type="response", se.fit=TRUE)
m2_leader_predict$predf <- preds_old$fit # predicted
m2_leader_predict$lower <- preds_old$fit - (1.96*preds_old$se.fit) # lower bounds
m2_leader_predict$upper <- preds_old$fit + (1.96*preds_old$se.fit) # upper
m2_leader_predict$variable <- "Strong Leader"
m2_leader_predict
m2_leader_no_fe
m2_leader_no_fe <- glm(system_leader_binary ~ combined_child_rearing + sex + age_grp + educ + polint_rev + gen_trust_rev, data = evs_df_final, family = "binomial")
summary(m2_leader_no_fe)
m2_expert_predict <- with(evs_df_final, data.frame(combined_child_rearing = -3:2,
sex=mean(sex, na.rm=TRUE),
age_grp=mean(age_grp, na.rm=TRUE),
educ = mean(educ, na.rm = TRUE),
polint_rev = mean(polint_rev, na.rm = TRUE),
gen_trust_rev = mean(gen_trust_rev, na.rm = TRUE)))
m2_expert_predict
preds_leader <- predict(m2_leader_no_fe, m2_leader_predict, type="response", se.fit=TRUE)
m2_leader_predict <- with(evs_df_final, data.frame(combined_child_rearing = -3:2,
sex=mean(sex, na.rm=TRUE),
age_grp=mean(age_grp, na.rm=TRUE),
educ = mean(educ, na.rm = TRUE),
polint_rev = mean(polint_rev, na.rm = TRUE),
gen_trust_rev = mean(gen_trust_rev, na.rm = TRUE)))
preds_leader <- predict(m2_leader_no_fe, m2_leader_predict, type="response", se.fit=TRUE)
m2_leader_predict$predf <- preds_leader$fit # predicted
m2_leader_predict$lower <- preds_leader$fit - (1.96*preds_leader$se.fit) # lower bounds
m2_leader_predict$upper <- preds_leader$fit + (1.96*preds_leader$se.fit) # upper
m2_leader_predict$variable <- "Strong Leader"
m2_leader_predict
m2_expert_predict <- with(evs_df_final, data.frame(combined_child_rearing = -3:2,
sex=mean(sex, na.rm=TRUE),
age_grp=mean(age_grp, na.rm=TRUE),
educ = mean(educ, na.rm = TRUE),
polint_rev = mean(polint_rev, na.rm = TRUE),
gen_trust_rev = mean(gen_trust_rev, na.rm = TRUE)))
preds_expert<- predict(m2_experts_no_fe, evs_df_final, type="response", se.fit=TRUE)
m2_predict_df_new$predf <- preds_expert$fit # predicted
m2_predict_df_new$lower <- preds_expert$fit - (1.96*preds_expert$se.fit) # lower bounds
m2_predict_df_new$upper <- preds_expert$fit + (1.96*preds_expert$se.fit) # upper
m2_leader_predict$variable <- "Rule by Experts"
m2_expert_predict <- with(evs_df_final, data.frame(combined_child_rearing = -3:2,
sex=mean(sex, na.rm=TRUE),
age_grp=mean(age_grp, na.rm=TRUE),
educ = mean(educ, na.rm = TRUE),
polint_rev = mean(polint_rev, na.rm = TRUE),
gen_trust_rev = mean(gen_trust_rev, na.rm = TRUE)))
preds_expert<- predict(m2_experts_no_fe, evs_df_final, type="response", se.fit=TRUE)
preds_expert
### Expert PRediction
m2_expert_predict <- with(evs_df_final, data.frame(combined_child_rearing = -3:2,
sex=mean(sex, na.rm=TRUE),
age_grp=mean(age_grp, na.rm=TRUE),
educ = mean(educ, na.rm = TRUE),
polint_rev = mean(polint_rev, na.rm = TRUE),
gen_trust_rev = mean(gen_trust_rev, na.rm = TRUE)))
preds_expert<- predict(m2_experts_no_fe, evs_df_final, type="response", se.fit=TRUE)
m2_expert_predict$predf <- preds_expert$fit # predicted
m2_expert_predict$lower <- preds_expert$fit - (1.96*preds_expert$se.fit) # lower bounds
m2_expert_predict$upper <- preds_expert$fit + (1.96*preds_expert$se.fit) # upper
m2_expert_predict$variable <- "Rule by Experts"
m2_expert_predict$predf <- preds_expert$fit # predicted
m2_expert_predict
m2_expert_predict <- with(evs_df_final, data.frame(combined_child_rearing = -3:2,
sex=mean(sex, na.rm=TRUE),
age_grp=mean(age_grp, na.rm=TRUE),
educ = mean(educ, na.rm = TRUE),
polint_rev = mean(polint_rev, na.rm = TRUE),
gen_trust_rev = mean(gen_trust_rev, na.rm = TRUE)))
m2_expert_predict
preds_expert<- predict(m2_experts_no_fe, evs_df_final, type="response", se.fit=TRUE)
preds_expert
preds_expert<- predict(m2_experts_no_fe, m2_expert_predict, type="response", se.fit=TRUE)
preds_expert
preds_expert<- predict(m2_experts_no_fe, m2_expert_predict, type="response", se.fit=TRUE)
m2_expert_predict$predf <- preds_expert$fit # predicted
m2_expert_predict$lower <- preds_expert$fit - (1.96*preds_expert$se.fit) # lower bounds
m2_expert_predict$upper <- preds_expert$fit + (1.96*preds_expert$se.fit) # upper
m2_expert_predict$variable <- "Rule by Experts"
m2_expert_predict
### Military Rule
m2_millitary_predict <- with(evs_df_final, data.frame(combined_child_rearing = -3:2,
sex=mean(sex, na.rm=TRUE),
age_grp=mean(age_grp, na.rm=TRUE),
educ = mean(educ, na.rm = TRUE),
polint_rev = mean(polint_rev, na.rm = TRUE),
gen_trust_rev = mean(gen_trust_rev, na.rm = TRUE)))
preds_millitary<- predict(m2_experts_no_fe, m2_expert_predict, type="response", se.fit=TRUE)
m2_millitary_predict$predf <- preds_millitary$fit # predicted
m2_millitary_predict$lower <- preds_millitary$fit - (1.96*preds_millitary$se.fit) # lower bounds
m2_millitary_predict$upper <- preds_millitary$fit + (1.96*preds_millitary$se.fit) # upper
m2_millitary_predict$variable <- "Military RUle"
m2_millitary_predict
### Military Rule
m2_millitary_predict <- with(evs_df_final, data.frame(combined_child_rearing = -3:2,
sex=mean(sex, na.rm=TRUE),
age_grp=mean(age_grp, na.rm=TRUE),
educ = mean(educ, na.rm = TRUE),
polint_rev = mean(polint_rev, na.rm = TRUE),
gen_trust_rev = mean(gen_trust_rev, na.rm = TRUE)))
preds_millitary<- predict(m2_army_no_fe, m2_millitary_predict, type="response", se.fit=TRUE)
m2_millitary_predict$predf <- preds_millitary$fit # predicted
m2_millitary_predict$lower <- preds_millitary$fit - (1.96*preds_millitary$se.fit) # lower bounds
m2_millitary_predict$upper <- preds_millitary$fit + (1.96*preds_millitary$se.fit) # upper
m2_millitary_predict$variable <- "Military RUle"
m2_millitary_predict
### Military Rule
m2_military_predict <- with(evs_df_final, data.frame(combined_child_rearing = -3:2,
sex=mean(sex, na.rm=TRUE),
age_grp=mean(age_grp, na.rm=TRUE),
educ = mean(educ, na.rm = TRUE),
polint_rev = mean(polint_rev, na.rm = TRUE),
gen_trust_rev = mean(gen_trust_rev, na.rm = TRUE)))
preds_military<- predict(m2_army_no_fe, m2_millitary_predict, type="response", se.fit=TRUE)
m2_military_predict$predf <- preds_military$fit # predicted
m2_military_predict$lower <- preds_military$fit - (1.96*preds_millitary$se.fit) # lower bounds
m2_military_predict$upper <- preds_military$fit + (1.96*preds_millitary$se.fit) # upper
m2_millitary_predict$variable <- "Military RUle"
m2_millitary_predict
m2_millitary_predict
preds_military<- predict(m2_army_no_fe, m2_millitary_predict, type="response", se.fit=TRUE)
preds_military
preds_military<- predict(m2_army_no_fe, m2_millitary_predict, type="response", se.fit=TRUE)
### Military Rule
m2_military_predict <- with(evs_df_final, data.frame(combined_child_rearing = -3:2,
sex=mean(sex, na.rm=TRUE),
age_grp=mean(age_grp, na.rm=TRUE),
educ = mean(educ, na.rm = TRUE),
polint_rev = mean(polint_rev, na.rm = TRUE),
gen_trust_rev = mean(gen_trust_rev, na.rm = TRUE)))
preds_military<- predict(m2_army_no_fe, m2_millitary_predict, type="response", se.fit=TRUE)
m2_military_predict$predf <- preds_military$fit # predicted
m2_military_predict$lower <- preds_military$fit - (1.96*preds_millitary$se.fit) # lower bounds
m2_military_predict$upper <- preds_military$fit + (1.96*preds_millitary$se.fit) # upper
m2_millitary_predict$variable <- "Military RUle"
m2_army_no_fe
preds_military<- predict(m2_army_no_fe, m2_millitary_predict, type="response", se.fit=TRUE)
m2_military_predict <- with(evs_df_final, data.frame(combined_child_rearing = -3:2,
sex=mean(sex, na.rm=TRUE),
age_grp=mean(age_grp, na.rm=TRUE),
educ = mean(educ, na.rm = TRUE),
polint_rev = mean(polint_rev, na.rm = TRUE),
gen_trust_rev = mean(gen_trust_rev, na.rm = TRUE)))
preds_military<- predict(m2_army_no_fe, m2_millitary_predict, type="response", se.fit=TRUE)
m2_military_predict$predf <- preds_military$fit # predicted
m2_military_predict$lower <- preds_military$fit - (1.96*preds_millitary$se.fit) # lower bounds
m2_military_predict$upper <- preds_military$fit + (1.96*preds_millitary$se.fit) # upper
m2_millitary_predict$variable <- "Military RUle"
m2_millitary_predict
rbind(m2_leader_predict, m2_expert_predict, m2_military_predict)
m2_military_predict
m2_expert_predict
m2_millitary_predict$variable <- "Military Rule"
rbind(m2_leader_predict, m2_expert_predict, m2_military_predict)
m2_leader_predict
m2_expert_predict
m2_military_predict
m2_military_predict$variable <- "Military Rule"
rbind(m2_leader_predict, m2_expert_predict, m2_military_predict)
m2_non_dem_system_predict_df <- rbind(m2_leader_predict, m2_expert_predict, m2_military_predict)
ggplot(m2_non_dem_system_predict_df, aes(x = combined_child_rearing ,
y = predf,
group=variable,
color=variable,
fill = variable,
ymin = lower, ymax = upper)) +
facet_wrap(~variable)+
geom_line(size = 1)+
geom_ribbon(alpha =  .5)+
scale_fill_manual(values = color_pallete[1:3])+
scale_color_manual(values = color_pallete[1:3])+
ylab("Predicted probability of")+
xlab("Authoritarian Childrearing Values") +
theme_minimal()+
theme( text = element_text(size=12, family = "Meta"),
legend.title= element_blank(),
legend.position="bottom",
legend.key.width = unit(.5,  unit = "cm"),
legend.spacing.x = unit(.25, unit = "cm"),
axis.title.x=element_text(size = rel(.9)),
axis.text.x = element_text(angle = 0, hjust = 0),
axis.text.y = element_text(size = rel(.9)),
plot.title = element_text(size = rel(1), face = "bold", hjust = 0, margin = margin(0,0,5,0)),
plot.subtitle = element_text(size = rel(.75), face = "plain", hjust = 0, margin = margin(0,0,5,0)),
plot.caption = element_text(size = rel(0.5), face = "italic", hjust = 1, vjust = 1, margin = margin(12,0,0,0)),
panel.grid.major = element_line(size = .25),
panel.grid.minor = element_line(size = .25),
panel.grid = element_line(colour = "grey70"))+
guides(colour = guide_legend(nrow = 1, byrow =  TRUE))
ggplot(m2_non_dem_system_predict_df, aes(x = combined_child_rearing ,
y = predf,
group=variable,
color=variable,
fill = variable,
ymin = lower, ymax = upper)) +
facet_wrap(~variable)+
geom_line(size = 1)+
geom_ribbon(alpha =  .5)+
scale_fill_manual(values = color_pallete[1:3])+
scale_color_manual(values = color_pallete[1:3])+
ylab("Predicted probability of")+
xlab("Authoritarian Childrearing Values") +
theme_minimal()+
theme( text = element_text(size=12, family = "Meta"),
legend.title= element_blank(),
legend.position="bottom",
legend.key.width = unit(.5,  unit = "cm"),
legend.spacing.x = unit(.25, unit = "cm"),
axis.title.x=element_text(size = rel(.9)),
axis.text.x = element_text(angle = 0, hjust = 0),
axis.text.y = element_text(size = rel(.9)),
plot.title = element_text(size = rel(1), face = "bold", hjust = 0, margin = margin(0,0,5,0)),
plot.subtitle = element_text(size = rel(.75), face = "plain", hjust = 0, margin = margin(0,0,5,0)),
plot.caption = element_text(size = rel(0.5), face = "italic", hjust = 1, vjust = 1, margin = margin(12,0,0,0)),
panel.grid.major = element_line(size = .25),
panel.grid.minor = element_line(size = .25),
panel.grid = element_line(colour = "grey70"))+
guides(colour = guide_legend(nrow = 1, byrow =  TRUE))
library(broom)
library(oddsratio)
library(moe)
library(extrafont)
library(gtsummary)
library(flextable)
library(corrr)
library(ggthemes)
color_pallete <- tableau_color_pal('Tableau 10')(4)
ggplot(m2_non_dem_system_predict_df, aes(x = combined_child_rearing ,
y = predf,
group=variable,
color=variable,
fill = variable,
ymin = lower, ymax = upper)) +
facet_wrap(~variable)+
geom_line(size = 1)+
geom_ribbon(alpha =  .5)+
scale_fill_manual(values = color_pallete[1:3])+
scale_color_manual(values = color_pallete[1:3])+
ylab("Predicted probability of")+
xlab("Authoritarian Childrearing Values") +
theme_minimal()+
theme( text = element_text(size=12, family = "Meta"),
legend.title= element_blank(),
legend.position="bottom",
legend.key.width = unit(.5,  unit = "cm"),
legend.spacing.x = unit(.25, unit = "cm"),
axis.title.x=element_text(size = rel(.9)),
axis.text.x = element_text(angle = 0, hjust = 0),
axis.text.y = element_text(size = rel(.9)),
plot.title = element_text(size = rel(1), face = "bold", hjust = 0, margin = margin(0,0,5,0)),
plot.subtitle = element_text(size = rel(.75), face = "plain", hjust = 0, margin = margin(0,0,5,0)),
plot.caption = element_text(size = rel(0.5), face = "italic", hjust = 1, vjust = 1, margin = margin(12,0,0,0)),
panel.grid.major = element_line(size = .25),
panel.grid.minor = element_line(size = .25),
panel.grid = element_line(colour = "grey70"))+
guides(colour = guide_legend(nrow = 1, byrow =  TRUE))
m2_leader_predict$variable <- "Strong Leader"
m2_expert_predict$variable <- "Rule by Experts"
m2_non_dem_system_predict_df <- rbind(m2_leader_predict, m2_expert_predict, m2_military_predict)
ggplot(m2_non_dem_system_predict_df, aes(x = combined_child_rearing ,
y = predf,
group=variable,
color=variable,
fill = variable,
ymin = lower, ymax = upper)) +
facet_wrap(~variable)+
geom_line(size = 1)+
geom_ribbon(alpha =  .5)+
scale_fill_manual(values = color_pallete[1:3])+
scale_color_manual(values = color_pallete[1:3])+
ylab("Predicted probability of")+
xlab("Authoritarian Childrearing Values") +
theme_minimal()+
theme( text = element_text(size=12, family = "Meta"),
legend.title= element_blank(),
legend.position="bottom",
legend.key.width = unit(.5,  unit = "cm"),
legend.spacing.x = unit(.25, unit = "cm"),
axis.title.x=element_text(size = rel(.9)),
axis.text.x = element_text(angle = 0, hjust = 0),
axis.text.y = element_text(size = rel(.9)),
plot.title = element_text(size = rel(1), face = "bold", hjust = 0, margin = margin(0,0,5,0)),
plot.subtitle = element_text(size = rel(.75), face = "plain", hjust = 0, margin = margin(0,0,5,0)),
plot.caption = element_text(size = rel(0.5), face = "italic", hjust = 1, vjust = 1, margin = margin(12,0,0,0)),
panel.grid.major = element_line(size = .25),
panel.grid.minor = element_line(size = .25),
panel.grid = element_line(colour = "grey70"))+
guides(colour = guide_legend(nrow = 1, byrow =  TRUE))
m2_experts_no_fe
tidy_m2_experts
m2_leader <- glm(system_leader_binary ~ combined_child_rearing + sex + age_grp + educ + polint_rev + gen_trust_rev +country_name_text, data = evs_df_final, family = "binomial")
m2_experts <- glm(system_experts_binary ~ combined_child_rearing + sex + age_grp + educ + polint_rev + gen_trust_rev + country_name_text, data = evs_df_final, family = "binomial")
m2_army<- glm(system_army_binary ~ combined_child_rearing + sex + age_grp + educ + polint_rev + gen_trust_rev + country_name_text, data = evs_df_final, family = "binomial")
#### Save as tidy dataset
tidy_m2_leader<- broom::tidy(m2_leader)
tidy_m2_experts <- broom::tidy(m2_experts)
tidy_m2_army <- broom::tidy(m2_army)
### Exponiate to get odds ratios.
tidy_m2_leader_exp <- broom::tidy(m2_leader, exponentiate = TRUE,  conf.int= TRUE)
tidy_m2_experts_exp <- broom::tidy(m2_experts, exponentiate = TRUE,  conf.int= TRUE)
tidy_m2_army_exp <- broom::tidy(m2_army, exponentiate = TRUE,  conf.int= TRUE)
tidy_m2_experts_exp
m2_expert_predict
0.4815441/0.5172256
0.5172256/0.4815441
0.4815441/0.6547708
0.6547708/0.6547708
0.6547708/0.4815441
m2_final_predict_df
m2_final_predict_df
