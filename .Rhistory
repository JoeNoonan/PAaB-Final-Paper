m2_military_predict <- with(evs_df_final, data.frame(combined_child_rearing = -3:2,
sex=mean(sex, na.rm=TRUE),
age_grp=mean(age_grp, na.rm=TRUE),
educ = mean(educ, na.rm = TRUE),
polint_rev = mean(polint_rev, na.rm = TRUE),
gen_trust_rev = mean(gen_trust_rev, na.rm = TRUE)))
preds_military<- predict(m2_army_no_fe, m2_millitary_predict, type="response", se.fit=TRUE)
m2_military_predict$predf <- preds_military$fit # predicted
m2_military_predict$lower <- preds_military$fit - (1.96*preds_millitary$se.fit) # lower bounds
m2_military_predict$upper <- preds_military$fit + (1.96*preds_millitary$se.fit) # upper
m2_military_predict$variable <- "Military Rule"
m2_non_dem_system_predict_df <- rbind(m2_leader_predict, m2_expert_predict, m2_military_predict)
### Military Rule
m2_military_predict <- with(evs_df_final, data.frame(combined_child_rearing = -3:2,
sex=mean(sex, na.rm=TRUE),
age_grp=mean(age_grp, na.rm=TRUE),
educ = mean(educ, na.rm = TRUE),
polint_rev = mean(polint_rev, na.rm = TRUE),
gen_trust_rev = mean(gen_trust_rev, na.rm = TRUE)))
preds_military<- predict(m2_army_no_fe, m2_millitary_predict, type="response", se.fit=TRUE)
m2_military_predict$predf <- preds_military$fit # predicted
m2_military_predict$lower <- preds_military$fit - (1.96*preds_millitary$se.fit) # lower bounds
m2_military_predict$upper <- preds_military$fit + (1.96*preds_millitary$se.fit) # upper
m2_military_predict$variable <- "Military Rule"
m2_military_predict <- with(evs_df_final, data.frame(combined_child_rearing = -3:2,
sex=mean(sex, na.rm=TRUE),
age_grp=mean(age_grp, na.rm=TRUE),
educ = mean(educ, na.rm = TRUE),
polint_rev = mean(polint_rev, na.rm = TRUE),
gen_trust_rev = mean(gen_trust_rev, na.rm = TRUE)))
preds_military<- predict(m2_army_no_fe, m2_military_predict, type="response", se.fit=TRUE)
m2_military_predict$predf <- preds_military$fit # predicted
m2_military_predict$lower <- preds_military$fit - (1.96*preds_millitary$se.fit) # lower bounds
m2_military_predict$upper <- preds_military$fit + (1.96*preds_millitary$se.fit) # upper
m2_military_predict$variable <- "Military Rule"
m2_non_dem_system_predict_df <- rbind(m2_leader_predict, m2_expert_predict, m2_military_predict)
m2_leader_predict
m2_expert_predict
m2_military_predict
preds_military<- predict(m2_army_no_fe, m2_military_predict, type="response", se.fit=TRUE)
m2_military_predict$predf <- preds_military$fit # predicted
m2_military_predict$predf <- preds_military$fit # predicted
m2_military_predict$lower <- preds_military$fit - (1.96*preds_millitary$se.fit) # lower bounds
m2_military_predict$upper <- preds_military$fit + (1.96*preds_millitary$se.fit) # upper
m2_military_predict$variable <- "Military Rule"
preds_military<- predict(m2_army_no_fe, m2_military_predict, type="response", se.fit=TRUE)
m2_military_predict$predf <- preds_military$fit # predicted
m2_military_predict$lower <- preds_military$fit - (1.96*preds_military$se.fit) # lower bounds
m2_military_predict$upper <- preds_military$fit + (1.96*preds_military$se.fit) # upper
m2_military_predict$variable <- "Military Rule"
m2_non_dem_system_predict_df <- rbind(m2_leader_predict, m2_expert_predict, m2_military_predict)
m2_non_dem_system_predict_plot <- ggplot(m2_non_dem_system_predict_df, aes(x = combined_child_rearing ,
y = predf,
group=variable,
color=variable,
fill = variable,
ymin = lower, ymax = upper)) +
facet_wrap(~variable)+
geom_line(size = 1)+
geom_ribbon(alpha =  .5)+
scale_fill_manual(values = color_pallete[1:3])+
scale_color_manual(values = color_pallete[1:3])+
ylab("Predicted probability")+
xlab("Authoritarian Childrearing Values") +
theme_minimal()+
theme( text = element_text(size=12, family = "Meta"),
legend.title= element_blank(),
legend.position="bottom",
legend.key.width = unit(.5,  unit = "cm"),
legend.spacing.x = unit(.25, unit = "cm"),
axis.title.x=element_text(size = rel(.9)),
axis.text.x = element_text(angle = 0, hjust = 0),
axis.text.y = element_text(size = rel(.9)),
plot.title = element_text(size = rel(1), face = "bold", hjust = 0, margin = margin(0,0,5,0)),
plot.subtitle = element_text(size = rel(.75), face = "plain", hjust = 0, margin = margin(0,0,5,0)),
plot.caption = element_text(size = rel(0.5), face = "italic", hjust = 1, vjust = 1, margin = margin(12,0,0,0)),
panel.grid.major = element_line(size = .25),
panel.grid.minor = element_line(size = .25),
panel.grid = element_line(colour = "grey70"))+
guides(colour = guide_legend(nrow = 1, byrow =  TRUE))
color_pallete <- tableau_color_pal('Tableau 10')(4)
#### Create prediction plot
m2_non_dem_system_predict_plot <- ggplot(m2_non_dem_system_predict_df, aes(x = combined_child_rearing ,
y = predf,
group=variable,
color=variable,
fill = variable,
ymin = lower, ymax = upper)) +
facet_wrap(~variable)+
geom_line(size = 1)+
geom_ribbon(alpha =  .5)+
scale_fill_manual(values = color_pallete[1:3])+
scale_color_manual(values = color_pallete[1:3])+
ylab("Predicted probability")+
xlab("Authoritarian Childrearing Values") +
theme_minimal()+
theme( text = element_text(size=12, family = "Meta"),
legend.title= element_blank(),
legend.position="bottom",
legend.key.width = unit(.5,  unit = "cm"),
legend.spacing.x = unit(.25, unit = "cm"),
axis.title.x=element_text(size = rel(.9)),
axis.text.x = element_text(angle = 0, hjust = 0),
axis.text.y = element_text(size = rel(.9)),
plot.title = element_text(size = rel(1), face = "bold", hjust = 0, margin = margin(0,0,5,0)),
plot.subtitle = element_text(size = rel(.75), face = "plain", hjust = 0, margin = margin(0,0,5,0)),
plot.caption = element_text(size = rel(0.5), face = "italic", hjust = 1, vjust = 1, margin = margin(12,0,0,0)),
panel.grid.major = element_line(size = .25),
panel.grid.minor = element_line(size = .25),
panel.grid = element_line(colour = "grey70"))+
guides(colour = guide_legend(nrow = 1, byrow =  TRUE))
ggsave("output/graphs/extra/m2_non_dem_system_predict_plot.png", plot = m2_predict_plot, width = 10.685, height = 8, units = "cm", scale = 1, dpi = 300)
#### Create prediction plot
m2_non_dem_system_predict_plot <- ggplot(m2_non_dem_system_predict_df, aes(x = combined_child_rearing ,
y = predf,
group=variable,
color=variable,
fill = variable,
ymin = lower, ymax = upper)) +
facet_wrap(~variable)+
geom_line(size = 1)+
geom_ribbon(alpha =  .5)+
scale_fill_manual(values = color_pallete[1:3])+
scale_color_manual(values = color_pallete[1:3])+
ylab("Predicted probability")+
xlab("Authoritarian Childrearing Values") +
theme_minimal()+
theme( text = element_text(size=12, family = "Meta"),
legend.title= element_blank(),
legend.position="bottom",
legend.key.width = unit(.5,  unit = "cm"),
legend.spacing.x = unit(.25, unit = "cm"),
axis.title.x=element_text(size = rel(.9)),
axis.text.x = element_text(angle = 0, hjust = 0),
axis.text.y = element_text(size = rel(.9)),
plot.title = element_text(size = rel(1), face = "bold", hjust = 0, margin = margin(0,0,5,0)),
plot.subtitle = element_text(size = rel(.75), face = "plain", hjust = 0, margin = margin(0,0,5,0)),
plot.caption = element_text(size = rel(0.5), face = "italic", hjust = 1, vjust = 1, margin = margin(12,0,0,0)),
panel.grid.major = element_line(size = .25),
panel.grid.minor = element_line(size = .25),
panel.grid = element_line(colour = "grey70"))+
guides(colour = guide_legend(nrow = 1, byrow =  TRUE))
ggsave("output/graphs/extra/m2_non_dem_system_predict_plot.png", plot = m2_non_dem_system_predict_plot, width = 10.685, height = 8, units = "cm", scale = 1, dpi = 300)
#### Create prediction plot
m2_non_dem_system_predict_plot <- ggplot(m2_non_dem_system_predict_df, aes(x = combined_child_rearing ,
y = predf,
group=variable,
color=variable,
fill = variable,
ymin = lower, ymax = upper)) +
facet_wrap(~variable)+
geom_line(size = .75)+
geom_ribbon(alpha =  .5)+
scale_fill_manual(values = color_pallete[1:3])+
scale_color_manual(values = color_pallete[1:3])+
ylab("Predicted probability")+
xlab("Authoritarian Childrearing Values") +
theme_minimal()+
theme( text = element_text(size=12, family = "Meta"),
legend.title= element_blank(),
legend.position="bottom",
legend.key.width = unit(.5,  unit = "cm"),
legend.spacing.x = unit(.25, unit = "cm"),
axis.title.x=element_text(size = rel(.9)),
axis.text.x = element_text(angle = 0, hjust = 0),
axis.text.y = element_text(size = rel(.9)),
plot.title = element_text(size = rel(1), face = "bold", hjust = 0, margin = margin(0,0,5,0)),
plot.subtitle = element_text(size = rel(.75), face = "plain", hjust = 0, margin = margin(0,0,5,0)),
plot.caption = element_text(size = rel(0.5), face = "italic", hjust = 1, vjust = 1, margin = margin(12,0,0,0)),
panel.grid.major = element_line(size = .25),
panel.grid.minor = element_line(size = .25),
panel.grid = element_line(colour = "grey70"))+
guides(colour = guide_legend(nrow = 1, byrow =  TRUE))
ggsave("output/graphs/extra/m2_non_dem_system_predict_plot.png", plot = m2_non_dem_system_predict_plot, width = 10.685, height = 8, units = "cm", scale = 1, dpi = 300)
#### Create prediction plot
m2_non_dem_system_predict_plot <- ggplot(m2_non_dem_system_predict_df, aes(x = combined_child_rearing ,
y = predf,
group=variable,
color=variable,
fill = variable,
ymin = lower, ymax = upper)) +
facet_wrap(~variable)+
geom_line(size = .5)+
geom_ribbon(alpha =  .5)+
scale_fill_manual(values = color_pallete[1:3])+
scale_color_manual(values = color_pallete[1:3])+
ylab("Predicted probability")+
xlab("Authoritarian Childrearing Values") +
theme_minimal()+
theme( text = element_text(size=12, family = "Meta"),
legend.title= element_blank(),
legend.position="bottom",
legend.key.width = unit(.5,  unit = "cm"),
legend.spacing.x = unit(.25, unit = "cm"),
axis.title.x=element_text(size = rel(.9)),
axis.text.x = element_text(angle = 0, hjust = 0),
axis.text.y = element_text(size = rel(.9)),
plot.title = element_text(size = rel(1), face = "bold", hjust = 0, margin = margin(0,0,5,0)),
plot.subtitle = element_text(size = rel(.75), face = "plain", hjust = 0, margin = margin(0,0,5,0)),
plot.caption = element_text(size = rel(0.5), face = "italic", hjust = 1, vjust = 1, margin = margin(12,0,0,0)),
panel.grid.major = element_line(size = .25),
panel.grid.minor = element_line(size = .25),
panel.grid = element_line(colour = "grey70"))+
guides(colour = guide_legend(nrow = 1, byrow =  TRUE))
ggsave("output/graphs/extra/m2_non_dem_system_predict_plot.png", plot = m2_non_dem_system_predict_plot, width = 10.685, height = 8, units = "cm", scale = 1, dpi = 300)
ggplot(m2_non_dem_system_predict_df, aes(x = combined_child_rearing ,
y = predf,
group=variable,
color=variable,
fill = variable,
ymin = lower, ymax = upper)) +
facet_wrap(~variable)+
geom_line(size = .5)+
geom_ribbon(alpha =  .5)+
scale_fill_manual(values = color_pallete[1:3])+
scale_color_manual(values = color_pallete[1:3])+
ylab("Predicted probability")+
xlab("Authoritarian Childrearing Values") +
theme_minimal()+
theme( text = element_text(size=12, family = "Meta"),
legend.title= element_blank(),
legend.position="bottom",
legend.key.width = unit(.5,  unit = "cm"),
legend.spacing.x = unit(.25, unit = "cm"),
axis.title.x=element_text(size = rel(.9)),
axis.text.x = element_text(angle = 0, hjust = 0),
axis.text.y = element_text(size = rel(.9)),
plot.title = element_text(size = rel(1), face = "bold", hjust = 0, margin = margin(0,0,5,0)),
plot.subtitle = element_text(size = rel(.75), face = "plain", hjust = 0, margin = margin(0,0,5,0)),
plot.caption = element_text(size = rel(0.5), face = "italic", hjust = 1, vjust = 1, margin = margin(12,0,0,0)),
panel.grid.major = element_line(size = .25),
panel.grid.minor = element_line(size = .25),
panel.grid = element_line(colour = "grey70"))+
guides(colour = guide_legend(nrow = 1, byrow =  TRUE))
#### Create prediction plot
m2_non_dem_system_predict_plot <- ggplot(m2_non_dem_system_predict_df, aes(x = combined_child_rearing ,
y = predf,
group=variable,
color=variable,
fill = variable,
ymin = lower,
ymax = upper)) +
facet_wrap(~variable)+
geom_line(size = .25)+
geom_ribbon(alpha =  .5)+
scale_fill_manual(values = color_pallete[1:3])+
scale_color_manual(values = color_pallete[1:3])+
ylab("Predicted probability")+
xlab("Authoritarian Childrearing Values") +
theme_minimal()+
theme( text = element_text(size=12, family = "Meta"),
legend.title= element_blank(),
legend.position="bottom",
legend.key.width = unit(.5,  unit = "cm"),
legend.spacing.x = unit(.25, unit = "cm"),
axis.title.x=element_text(size = rel(.9)),
axis.text.x = element_text(angle = 0, hjust = 0),
axis.text.y = element_text(size = rel(.9)),
plot.title = element_text(size = rel(1), face = "bold", hjust = 0, margin = margin(0,0,5,0)),
plot.subtitle = element_text(size = rel(.75), face = "plain", hjust = 0, margin = margin(0,0,5,0)),
plot.caption = element_text(size = rel(0.5), face = "italic", hjust = 1, vjust = 1, margin = margin(12,0,0,0)),
panel.grid.major = element_line(size = .25),
panel.grid.minor = element_line(size = .25),
panel.grid = element_line(colour = "grey70"))+
guides(colour = guide_legend(nrow = 1, byrow =  TRUE))
ggsave("output/graphs/extra/m2_non_dem_system_predict_plot.png", plot = m2_non_dem_system_predict_plot, width = 10.685, height = 8, units = "cm", scale = 1, dpi = 300)
#### Europe M2 Odds facet
#### Not used in final paper
df <- filter(europe_m2, term == "combined_child_rearing") %>%
arrange(desc(estimate)) %>%
mutate(country_name_text  = fct_reorder(country_name_text, estimate)) %>%
mutate(recent_dem = ifelse(country_name_text %in% new_democracies, "New Democracies", "Old Democracies"),
recent_dem = factor(recent_dem, levels = c("Old Democracies", "New Democracies")))
europe_m2_plot_facet <- ggplot(df, aes(x = estimate, y = country_name_text, color = recent_dem)) +
geom_vline(aes(xintercept = 1), size = .75, linetype = "dashed", color = "red") +
geom_errorbarh(aes(xmax = conf.high, xmin = conf.low), size =.5, height = .5, color = "black") +
geom_point(size = 2)+
xlab("Odds Ratio")+
scale_color_manual(values= color_pallete[1:2])+
facet_wrap(~recent_dem, scales = "free_y")+
scale_x_continuous(breaks = seq(-.5, 1.5, .25))+
theme_minimal()+
theme(text = element_text(size=12, family = "Meta"),
legend.title= element_blank(),
legend.position="bottom",
legend.key.width = unit(.5,  unit = "cm"),
legend.spacing.x = unit(.25, unit = "cm"),
legend.box.margin=margin(-12,-12,-12,-12),
axis.title.y = element_blank(),
axis.title.x=element_text(size = rel(.9)),
axis.text.x = element_text(size = rel(.9), hjust = .75),
axis.text.y = element_text(size = rel(.9)),
plot.title = element_text(size = rel(1), face = "bold", hjust = 0, margin = margin(0,0,5,0)),
plot.subtitle = element_text(size = rel(.75), face = "plain", hjust = 0, margin = margin(0,0,5,0)),
plot.caption = element_text(size = rel(0.5), face = "italic", hjust = 1, vjust = 1, margin = margin(12,0,0,0)),
panel.grid.major = element_line(size = .25),
panel.grid.minor = element_line(size = .25),
panel.grid = element_line(colour = "grey70"))+
guides(colour = guide_legend(nrow = 1, byrow =  TRUE))
ggsave("output/graphs/extra/europe_m2_plot_facet.png", plot = europe_m2_plot_facet, width = 12, height = 8, units = "cm", scale = 1, dpi = 300)
### Export findings
europe_m2_cleaned <- europe_m2 %>%
filter(term != "(Intercept)") %>%
mutate(`Odds Ratio` = estimate,
`95% CI` = paste(round(conf.low,3), "-", round(conf.high,3)),
`p-value` = round(p.value,3)) %>%
select(country_name_text, term, `Odds Ratio`, `95% CI`,`p-value`)
write_csv(europe_m2_cleaned, "output/europe_m2_cleaned.csv")
m2_predict_function <- function(x){
df <- filter(evs_df_final, country_name_text %in% {{x}})
m2 <- glm(commit_dem_binary ~ combined_child_rearing + sex + age_grp + educ + polint_rev + gen_trust_rev, family = binomial, data = df)
### Create new prediction Set
m2_predict_df_new <- with(evs_df_final_new, data.frame(combined_child_rearing = -3:2,
sex=mean(sex, na.rm=TRUE),
age_grp=mean(age_grp, na.rm=TRUE),
educ = mean(educ, na.rm = TRUE),
polint_rev = mean(polint_rev, na.rm = TRUE),
gen_trust_rev = mean(gen_trust_rev, na.rm = TRUE)))
preds_new<- predict(m2, m2_predict_df_new, type="response", se.fit=TRUE)
m2_predict_df_new$predf <- preds_new$fit # predicted
m2_predict_df_new$lower <- preds_new$fit - (1.96*preds_new$se.fit) # lower bounds
m2_predict_df_new$upper <- preds_new$fit + (1.96*preds_new$se.fit) # upper
}
m2_predict_country_list <- lapply(country_list, m1_predict_function)
names(m2_predict_country_list) <- country_list
m2_predict_function <- function(x){
df <- filter(evs_df_final, country_name_text %in% {{x}})
m2 <- glm(commit_dem_binary ~ combined_child_rearing + sex + age_grp + educ + polint_rev + gen_trust_rev, family = binomial, data = df)
### Create new prediction Set
m2_predict_df_new <- with(evs_df_final_new, data.frame(combined_child_rearing = -3:2,
sex=mean(sex, na.rm=TRUE),
age_grp=mean(age_grp, na.rm=TRUE),
educ = mean(educ, na.rm = TRUE),
polint_rev = mean(polint_rev, na.rm = TRUE),
gen_trust_rev = mean(gen_trust_rev, na.rm = TRUE)))
preds_new<- predict(m2, m2_predict_df_new, type="response", se.fit=TRUE)
m2_predict_df_new$predf <- preds_new$fit # predicted
m2_predict_df_new$lower <- preds_new$fit - (1.96*preds_new$se.fit) # lower bounds
m2_predict_df_new$upper <- preds_new$fit + (1.96*preds_new$se.fit) # upper
}
m2_predict_country_list <- lapply(country_list, m2_predict_function)
names(m2_predict_country_list) <- country_list
m2_predict_function <- function(x){
df <- filter(evs_df_final, country_name_text %in% {{x}})
m2 <- glm(commit_dem_binary ~ combined_child_rearing + sex + age_grp + educ + polint_rev + gen_trust_rev, family = binomial, data = df)
### Create new prediction Set
m2_predict_df_new <- with(evs_df_final_new, data.frame(combined_child_rearing = -3:2,
sex=mean(sex, na.rm=TRUE),
age_grp=mean(age_grp, na.rm=TRUE),
educ = mean(educ, na.rm = TRUE),
polint_rev = mean(polint_rev, na.rm = TRUE),
gen_trust_rev = mean(gen_trust_rev, na.rm = TRUE)))
preds_new<- predict(m2, m2_predict_df_new, type="response", se.fit=TRUE)
m2_predict_df_new$predf <- preds_new$fit # predicted
m2_predict_df_new$lower <- preds_new$fit - (1.96*preds_new$se.fit) # lower bounds
m2_predict_df_new$upper <- preds_new$fit + (1.96*preds_new$se.fit) # upper
}
m2_predict_country_list <- lapply(country_list, m2_predict_function)
names(m2_predict_country_list) <- country_list
m2_predict_function <- function(x){
df <- filter(evs_df_final, country_name_text %in% {{x}})
m2 <- glm(commit_dem_binary ~ combined_child_rearing + sex + age_grp + educ + polint_rev + gen_trust_rev, family = binomial, data = df)
### Create new prediction Set
m2_predict_df_new <- with(df, data.frame(combined_child_rearing = -3:2,
sex=mean(sex, na.rm=TRUE),
age_grp=mean(age_grp, na.rm=TRUE),
educ = mean(educ, na.rm = TRUE),
polint_rev = mean(polint_rev, na.rm = TRUE),
gen_trust_rev = mean(gen_trust_rev, na.rm = TRUE)))
preds_new<- predict(m2, m2_predict_df_new, type="response", se.fit=TRUE)
m2_predict_df_new$predf <- preds_new$fit # predicted
m2_predict_df_new$lower <- preds_new$fit - (1.96*preds_new$se.fit) # lower bounds
m2_predict_df_new$upper <- preds_new$fit + (1.96*preds_new$se.fit) # upper
}
m2_predict_country_list <- lapply(country_list, m2_predict_function)
names(m2_predict_country_list) <- country_list
m2_predict_country_list
m2_predict_function <- function(x){
df <- filter(evs_df_final, country_name_text %in% {{x}})
m2 <- glm(commit_dem_binary ~ combined_child_rearing + sex + age_grp + educ + polint_rev + gen_trust_rev, family = binomial, data = df)
### Create new prediction Set
m2_predict_df_new <- with(df, data.frame(combined_child_rearing = -3:2,
sex=mean(sex, na.rm=TRUE),
age_grp=mean(age_grp, na.rm=TRUE),
educ = mean(educ, na.rm = TRUE),
polint_rev = mean(polint_rev, na.rm = TRUE),
gen_trust_rev = mean(gen_trust_rev, na.rm = TRUE)))
preds_new<- predict(m2, m2_predict_df_new, type="response", se.fit=TRUE)
m2_predict_df_new$predf <- preds_new$fit # predicted
m2_predict_df_new$lower <- preds_new$fit - (1.96*preds_new$se.fit) # lower bounds
m2_predict_df_new$upper <- preds_new$fit + (1.96*preds_new$se.fit) # upper
m2_predict_df_new
}
m2_predict_country_list <- lapply(country_list, m2_predict_function)
names(m2_predict_country_list) <- country_list
m2_predict_country_list
m2_predict_function <- function(x){
df <- filter(evs_df_final, country_name_text %in% {{x}})
m2 <- glm(commit_dem_binary ~ combined_child_rearing + sex + age_grp + educ + polint_rev + gen_trust_rev, family = binomial, data = df)
### Create new prediction Set
m2_predict_df <- with(df, data.frame(combined_child_rearing = -3:2,
sex=mean(sex, na.rm=TRUE),
age_grp=mean(age_grp, na.rm=TRUE),
educ = mean(educ, na.rm = TRUE),
polint_rev = mean(polint_rev, na.rm = TRUE),
gen_trust_rev = mean(gen_trust_rev, na.rm = TRUE)))
preds<- predict(m2, m2_predict_df, type="response", se.fit=TRUE)
m2_predict_df$predf <- preds$fit # predicted
m2_predict_df$lower <- preds$fit - (1.96*preds$se.fit) # lower bounds
m2_predict_df$upper <- preds$fit + (1.96*preds$se.fit) # upper
m2_predict_df$country_name_text <- {{x}}
m2_predict_df
}
m2_predict_country_list <- lapply(country_list, m2_predict_function)
names(m2_predict_country_list) <- country_list
m2_predict_europe <- bind_rows(m2_predict_country_list, .id = "country_name_text")
m2_predict_europe
ggplot(m1_predict_europe, aes(x = combined_child_rearing  , y = predf, ymin = lower, ymax = upper)) +
geom_line()+
geom_ribbon(alpha =  .25, fill = color_pallete[1] , colour=NA)+
facet_wrap(~country_name_text)+
ylab("Predicted probability of \n being a committed democrat")+
xlab("Authoritarian Childrearing Values") +
theme_minimal()+
theme( text = element_text(size=12, family = "Meta"),
legend.title= element_blank(),
legend.position="bottom",
legend.key.width = unit(.5,  unit = "cm"),
legend.spacing.x = unit(.25, unit = "cm"),
legend.box.margin=margin(-12,-12,-12,-12),
axis.title.x=element_text(size = rel(.9)),
axis.text.x = element_text(angle = 0, hjust = 0),
axis.text.y = element_text(size = rel(.9)),
plot.title = element_text(size = rel(1), face = "bold", hjust = 0, margin = margin(0,0,5,0)),
plot.subtitle = element_text(size = rel(.75), face = "plain", hjust = 0, margin = margin(0,0,5,0)),
plot.caption = element_text(size = rel(0.5), face = "italic", hjust = 1, vjust = 1, margin = margin(12,0,0,0)),
panel.grid.major = element_line(size = .25),
panel.grid.minor = element_line(size = .25),
panel.grid = element_line(colour = "grey70"))+
guides(colour = guide_legend(nrow = 1, byrow =  TRUE))
ggplot(m1_predict_europe, aes(x = combined_child_rearing  , y = predf, ymin = lower, ymax = upper)) +
geom_line()+
geom_ribbon(alpha =  .25, fill = color_pallete[1] , colour=NA)+
facet_wrap(~country_name_text)+
ylab("Predicted probability of \n being a committed democrat")+
xlab("Authoritarian Childrearing Values") +
theme_minimal()+
theme( text = element_text(size=12, family = "Meta"),
legend.title= element_blank(),
legend.position="bottom",
legend.key.width = unit(.5,  unit = "cm"),
legend.spacing.x = unit(.25, unit = "cm"),
legend.box.margin=margin(-12,-12,-12,-12),
axis.title.x=element_text(size = rel(.9)),
axis.text.x = element_text(angle = 0, hjust = 0),
axis.text.y = element_text(size = rel(.9)),
plot.title = element_text(size = rel(1), face = "bold", hjust = 0, margin = margin(0,0,5,0)),
plot.subtitle = element_text(size = rel(.75), face = "plain", hjust = 0, margin = margin(0,0,5,0)),
plot.caption = element_text(size = rel(0.5), face = "italic", hjust = 1, vjust = 1, margin = margin(12,0,0,0)),
panel.grid.major = element_line(size = .25),
panel.grid.minor = element_line(size = .25),
panel.grid = element_line(colour = "grey70"))+
guides(colour = guide_legend(nrow = 1, byrow =  TRUE))
ggplot(m2_predict_europe, aes(x = combined_child_rearing  , y = predf, ymin = lower, ymax = upper)) +
geom_line()+
geom_ribbon(alpha =  .25, fill = color_pallete[1] , colour=NA)+
facet_wrap(~country_name_text)+
ylab("Predicted probability of \n being a committed democrat")+
xlab("Authoritarian Childrearing Values") +
theme_minimal()+
theme( text = element_text(size=12, family = "Meta"),
legend.title= element_blank(),
legend.position="bottom",
legend.key.width = unit(.5,  unit = "cm"),
legend.spacing.x = unit(.25, unit = "cm"),
legend.box.margin=margin(-12,-12,-12,-12),
axis.title.x=element_text(size = rel(.9)),
axis.text.x = element_text(angle = 0, hjust = 0),
axis.text.y = element_text(size = rel(.9)),
plot.title = element_text(size = rel(1), face = "bold", hjust = 0, margin = margin(0,0,5,0)),
plot.subtitle = element_text(size = rel(.75), face = "plain", hjust = 0, margin = margin(0,0,5,0)),
plot.caption = element_text(size = rel(0.5), face = "italic", hjust = 1, vjust = 1, margin = margin(12,0,0,0)),
panel.grid.major = element_line(size = .25),
panel.grid.minor = element_line(size = .25),
panel.grid = element_line(colour = "grey70"))+
guides(colour = guide_legend(nrow = 1, byrow =  TRUE))
#### Not reported in paper
#### M2: Create predict plot with facet_wrap for all countries
m2_predict_eu_plot <- ggplot(m2_predict_europe, aes(x = combined_child_rearing  , y = predf, ymin = lower, ymax = upper)) +
geom_line()+
geom_ribbon(alpha =  .25, fill = color_pallete[1] , colour=NA)+
facet_wrap(~country_name_text)+
ylab("Predicted probability of \n being a committed democrat")+
xlab("Authoritarian Childrearing Values") +
theme_minimal()+
theme( text = element_text(size=12, family = "Meta"),
legend.title= element_blank(),
legend.position="bottom",
legend.key.width = unit(.5,  unit = "cm"),
legend.spacing.x = unit(.25, unit = "cm"),
legend.box.margin=margin(-12,-12,-12,-12),
axis.title.x=element_text(size = rel(.9)),
axis.text.x = element_text(angle = 0, hjust = 0),
axis.text.y = element_text(size = rel(.9)),
plot.title = element_text(size = rel(1), face = "bold", hjust = 0, margin = margin(0,0,5,0)),
plot.subtitle = element_text(size = rel(.75), face = "plain", hjust = 0, margin = margin(0,0,5,0)),
plot.caption = element_text(size = rel(0.5), face = "italic", hjust = 1, vjust = 1, margin = margin(12,0,0,0)),
panel.grid.major = element_line(size = .25),
panel.grid.minor = element_line(size = .25),
panel.grid = element_line(colour = "grey70"))+
guides(colour = guide_legend(nrow = 1, byrow =  TRUE))
ggsave("output/graphs/extra/m2_predict_europe_plot.png", plot = m2_predict_eu_plot, width = 10.685, height = 8, units = "cm", scale = 2, dpi = 300)
